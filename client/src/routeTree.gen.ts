/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as AppProjectsIndexImport } from './routes/_app/projects/index'
import { Route as AppProjectsProjectIdImport } from './routes/_app/projects/$projectId'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProjectsIndexRoute = AppProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProjectsProjectIdRoute = AppProjectsProjectIdImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/projects/$projectId': {
      id: '/_app/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof AppProjectsProjectIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/projects/': {
      id: '/_app/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AppProjectsIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppIndexRoute: typeof AppIndexRoute
  AppProjectsProjectIdRoute: typeof AppProjectsProjectIdRoute
  AppProjectsIndexRoute: typeof AppProjectsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppIndexRoute: AppIndexRoute,
  AppProjectsProjectIdRoute: AppProjectsProjectIdRoute,
  AppProjectsIndexRoute: AppProjectsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AppAboutRoute
  '/': typeof AppIndexRoute
  '/projects/$projectId': typeof AppProjectsProjectIdRoute
  '/projects': typeof AppProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AppAboutRoute
  '/': typeof AppIndexRoute
  '/projects/$projectId': typeof AppProjectsProjectIdRoute
  '/projects': typeof AppProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_app/about': typeof AppAboutRoute
  '/_app/': typeof AppIndexRoute
  '/_app/projects/$projectId': typeof AppProjectsProjectIdRoute
  '/_app/projects/': typeof AppProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/about'
    | '/'
    | '/projects/$projectId'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/about'
    | '/'
    | '/projects/$projectId'
    | '/projects'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/register'
    | '/_app/about'
    | '/_app/'
    | '/_app/projects/$projectId'
    | '/_app/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login",
        "/register"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/about",
        "/_app/",
        "/_app/projects/$projectId",
        "/_app/projects/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/projects/$projectId": {
      "filePath": "_app/projects/$projectId.tsx",
      "parent": "/_app"
    },
    "/_app/projects/": {
      "filePath": "_app/projects/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
